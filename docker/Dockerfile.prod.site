# Production Dockerfile for blog sites
FROM node:20-alpine

# Build arguments
ARG SITE_DIR_NAME
ARG SITE_PORT

# Set working directory
WORKDIR /app

# Install system dependencies
RUN apk add --no-cache \
    sqlite \
    python3 \
    make \
    g++ \
    bash \
    curl \
    && rm -rf /var/cache/apk/*

# Update npm to latest version to fix deprecation warnings
RUN npm install -g npm@latest

# Copy the entire monorepo structure
COPY . .

# Create a root package.json for workspace management
RUN echo '{"name": "blog-monorepo", "workspaces": ["blog-core", "'${SITE_DIR_NAME}'"]}' > package.json

# Install all dependencies using workspace
RUN npm install --omit=dev && npm cache clean --force

# Set working directory to the specific site
WORKDIR /app/${SITE_DIR_NAME}

# Create necessary directories
RUN mkdir -p /app/data/database /app/data/uploads /app/logs

# Set proper permissions
RUN addgroup -g 1001 -S blog && \
    adduser -S blog -u 1001 -G blog && \
    chown -R blog:blog /app/data /app/logs /app/${SITE_DIR_NAME}

# Switch to non-root user
USER blog

# Expose port
EXPOSE ${SITE_PORT}

# Set environment
ENV NODE_ENV=production
ENV PORT=${SITE_PORT}

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:${SITE_PORT}/health || exit 1

# Start the application
CMD ["node", "src/app.js"]